# General info --------------------------------------------------------------------
# General info regarding the processing


config_name: LEEFData
description: LEEF Data from an long term experiment.
             Some more detaled info has to follow.
maintainer: Rainer M. Krug <Rainer@uzh.ch>


# Directorie for the processing  --------------------------------------------------------------------
## The folder structure in this directory
## has to be one folder for each measurement type.
##


directories:
  raw: "0.raw.data"
  pre_processed: "1.pre-processed.data"
  extracted: "2.extracted.data"
  archive: "3.archived.data"
  tools: "tools"


# queues containing functions  --------------------------------------------------------------------
## These should be left blank, as they will be owerwritten.


queues:
  pre_processors:
  extractors:
  archivers:
  additors:


# Packages which contain the pre_processors, extractors, additors, ...  --------------------------------------------------------------------
# These will be installed using the `InstallCommand` and registered
# in the queue using the `RegisterCommand`.
# The RegisterCommand` can also contain additional customizations needed by the processors.


measurement_packages:
  LEEF.measurement.bemovi:
    name: LEEF.measurement.bemovi
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.measurement.bemovi')
    RegisterCommand: LEEF.measurement.bemovi::tools_path(tools_path = '.'); LEEF.measurement.bemovi::register()
  LEEF.measurement.flocam:
    name: LEEF.measurement.flowcam
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages(('rkrug/LEEF.measurement.flowcam')
    RegisterCommand: LEEF.measurement.flowcam::register()
  # LEEF.measurement.flowcytometer:
  #   name: LEEF.measurement.flowcytometer
  #   InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.measurement.flowcytometer')
  #   RegisterCommand: LEEF.measurement.flowcytometer::register()
  LEEF.measurement.incubatortemp:
    name: LEEF.measurement.incubatortemp
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.measurement.incubatortemp')
    RegisterCommand: LEEF.measurement.incubatortemp::register()
  LEEF.measurement.manualcount:
    name: LEEF.measurement.manualcount
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.measurement.manualcount')
    RegisterCommand: LEEF.measurement.manualcount::register()
  LEEF.measurement.respirometer:
    name: LEEF.measurement.respirometer
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.measurement.respirometer')
    RegisterCommand: LEEF.measurement.respirometer::register()
  LEEF.measurement.toc:
    name: LEEF.measurement.toc
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.measurement.toc')
    RegisterCommand: LEEF.measurement.toc::register()


# archival_packages  --------------------------------------------------------------------
# These will be installed using the `InstallCommand` and registered
# in the queue using the `RegisterCommand`.
# The RegisterCommand` can also contain additional customizations needed by the processors.
# Additional values are arcival package specific.


archive_packages:
  LEEF.archive.default:
    name: LEEF.archive.default
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.archive.default')
    RegisterCommand: LEEF.archive.default::register(compression = "none")
    archive_name: LEEF
    archive_compression: tar


# backend packages ()  --------------------------------------------------------------------
# These will be installed using the `InstallCommand` and registered
# in the queue using the `RegisterCommand`.
# The RegisterCommand` can also contain additional customizations needed by the processors.
# Additional values are arcival package specific.

## NOT IMPLEMENTED YET
## SOME MORE THOUGHT NEEDED HERE!


backend_packages:
  LEEF.backend.sqlite:
    name: LEEF.backend.sqlite
    InstallCommand: drat::addRepo('LEEF-UZH'); install.packages('rkrug/LEEF.backend.sqlite')
    RegisterCommand: LEEF.backend.sqlite::register()
    dbpath:
    dbname: 'LEEFData.sqlite'


# Trusted Time Stamps  --------------------------------------------------------------------
## NOT IMPLEMENTED YET
## SOME MORE THOUGHT NEEDED HERE!


tts: TRUE
tts_info:
  name: Rainer M Krug
  email: Rainer.Krug@uzh.ch
  comment: testdata
  archivename: To Be Set


# DOI   --------------------------------------------------------------------
## NOT IMPLEMENTED YET


doi: FALSE

